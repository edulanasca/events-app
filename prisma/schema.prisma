datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  password      String
  organizedEvents Event[] @relation("UserEvents")
  attendedEvents Attendee[] 
  allowlistEntries Allowlist[]  @relation("UserAllowlist")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Event {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  date        DateTime?
  location    String?
  isVirtual   Boolean
  organizer   User      @relation("UserEvents", fields: [organizerId], references: [id])
  organizerId String
  attendees   Attendee[]
  allowlist   Allowlist[] @relation("EventAllowlist")
  categories  Category[] @relation("EventCategories")

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Attendee {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  event     Event    @relation(fields: [eventId], references: [id])
  eventId   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, eventId])
}

model Allowlist {
  id        Int      @id @default(autoincrement())
  user      User     @relation("UserAllowlist", fields: [userId], references: [id])
  userId    String
  event     Event    @relation("EventAllowlist", fields: [eventId], references: [id])
  eventId   Int
  approved  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, eventId])
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  events    Event[]  @relation("EventCategories")
}